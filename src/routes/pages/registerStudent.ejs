<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Account</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <style>
    body {
      background-color: #6495ed;
      margin: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      min-height: 100svh;
      font-size: larger;
    }
    </style>
</head>
<body class="">
  <main>
  
    
 <div class="container">
    <div class="card mt-4">
        <div class="card-header">
            <h2 class=" fw-bolder">Register</h3>
        </div>
        <form id='clientForm'>
        <div class="card-body">
            <b>Full name</b>
            <input type="text" class="form-control" id="fullName" name="fullName" required></input>
            <b>Email</b>
            <input type="email" class="form-control" id="email" name="email" required></input>
            <b>Password</b>
            <input  type="password" class="form-control " id="repeatPassword" name="repeatPassword" required></input>
            <b>Repeat password</b>
            <input type="password" class="form-control" id="password" name="password" required></input>
            <b>Guardian's Name</b>
            <input type="text" class="form-control" id="guardiansName" name="guardiansName" required></input>
            <b>Phone</b>
            <input type="number" class="form-control" id="phone" name="phone" required></input>
            <b>Adresss</b>
            <input type="text" class="form-control" id="address" name="address" required></input>
            <b>Club</b>
            <select class="form-select form-control" id="typeSelect" aria-label="Type Select" required>
              <option value="0">Club 1</option>
              <option value="1">Club 2</option>            
            </select>
        </div>
        <div class="card-footer">
            <div class="error text-danger"></div>
            <button class="btn btn-primary mt-2 mb-2" >Submit</button>
        </div>
    </form>
    </div>
 </div>
        

  </main>
  <script src="https://kit.fontawesome.com/2e4e857ba3.js" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
  <script>
    
    function logout() {
      // Simula el envÃ­o del formulario de logout
      document.getElementById('logoutForm').submit();
    }

    //form
    const mensajeError = document.getElementsByClassName("error")[0];
    document.getElementById("clientForm").addEventListener("submit", async (e) => {
    e.preventDefault();
    const clubSelect = document.getElementById("typeSelect");
    const selectedClub = clubSelect.options[clubSelect.selectedIndex].value;

    const password = document.getElementById("password").value;
    const repeatPassword = document.getElementById("repeatPassword").value;
    const mensajeError = document.getElementsByClassName("error")[0];

    // Check if passwords match
    if (password !== repeatPassword) {
      mensajeError.textContent = "Passwords do not match.";
      mensajeError.classList.toggle("escondido", false);
      return;
    }
    const formData = new FormData(e.target);
        //console.log(formData)

    const res = await fetch("http://localhost:4000/api/register-student", { 
      method: "POST",
      headers: {
        "Content-Type": "application/json"
        },
      body: JSON.stringify({
        name: formData.get("fullName"),
        guardiansname: formData.get("guardiansName"),
        email: formData.get("email") || "null",
        phone: formData.get("phone") || "null",
        password:  formData.get("password"),
        address: formData.get("address") || "null",
        club: selectedClub  || "null",

        })
    });

    if (!res.ok) {
      const errorResponse = await res.json();
      mensajeError.textContent = errorResponse.message; // Set the error message
      mensajeError.classList.toggle("escondido", false);
      return;
    }

    const resJson = await res.json();
    if (resJson.redirect) {
      
     // location.reload();
     const res2 = await fetch("/create-checkout-session-student", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            name: formData.get("fullName"),
            guardiansname: formData.get("guardiansName"),
            email: formData.get("email") || "null",
            phone: formData.get("phone") || "null",
            password:  formData.get("password"),
            address: formData.get("address") || "null",
            club: selectedClub  || "null",
            
          }),
        });
        const data = await res2.json();
        //console.log(data);

        window.location.href = data.url;
      }

    
  });

    
</script>

</body>
</html>